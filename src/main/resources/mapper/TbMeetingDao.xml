<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liubin.emos.dao.TbMeetingDao">
    <insert id="insertMeeting" parameterType="com.liubin.emos.domain.TbMeeting">
        INSERT INTO tb_meeting
        SET uuid = #{uuid},
        title = #{title},
        date = #{date},
        creator_id = #{creatorId},
        <if test="place!=null">
            place = #{place},
        </if>
        start = #{start},
        end = #{end},
        type = #{type},
        members = #{members},
        `desc` = #{desc},
        instance_id = #{instanceId},
        status = #{status},
        create_time = NOW()
    </insert>
    <select id="searchMyMeetingListByPage" parameterType="HashMap" resultType="HashMap">
        SELECT
        m.id,
        m.uuid,
        m.title,
        u2.name,
        DATE_FORMAT(m.date,'%Y年%m月%d日') AS date,
        m.place,
        DATE_FORMAT(m.start,'%H:%i') AS start,
        DATE_FORMAT(m.end,'%H:%i') AS end,
        m.type,
        m.status,
        m.desc,
        u2.photo,
        TIMESTAMPDIFF(HOUR,CONCAT(m.date," ",m.start),CONCAT(m.date," ",m.end)) AS hour,
        JSON_LENGTH(m.members) AS num
        FROM tb_meeting m
        JOIN tb_user u1 ON JSON_CONTAINS(m.members,CAST(u1.id AS CHAR))
        JOIN tb_user u2 ON m.creator_id=u2.id
        WHERE u1.id = #{userId} AND u1.status = 1 AND u2.status = 1
        AND m.status IN(3,4)
        ORDER BY m.date,m.start,m.id
        LIMIT #{start}, #{length}
    </select>
    <select id="searchMeetingMembersInSameDept" parameterType="String" resultType="boolean">
        SELECT
        IF(COUNT(DISTINCT u.dept_id)=1,TRUE,FALSE ) AS bool
        FROM tb_meeting m
        JOIN tb_user u ON JSON_CONTAINS ( m.members, CAST( u.id AS CHAR ) )
        WHERE m.uuid=#{uuid} AND u.status = 1
    </select>
    <select id="searchMeetingById" parameterType="int" resultType="HashMap">
        SELECT
        m.uuid,
        m.creator_id AS creatorId,
        m.title,
        u.name,
        DATE_FORMAT( m.date, '%Y-%m-%d' ) AS date,
        m.place,
        DATE_FORMAT( m.START, '%H:%i' ) AS start,
        DATE_FORMAT( m.END, '%H:%i' ) AS end,
        m.type,
        m.status,
        m.desc,
        m.instance_id AS instanceId
        FROM tb_meeting m
        JOIN tb_user u ON m.creator_id = u.id
        WHERE m.id =#{id} AND u.status = 1
    </select>
    <select id="searchMeetingMembers" parameterType="int" resultType="HashMap">
        SELECT
        u.id,
        u.name,
        u.photo
        FROM tb_meeting m
        JOIN tb_user u ON JSON_CONTAINS ( m.members, CAST( u.id AS CHAR ) )
        WHERE m.id=#{id} AND u.status = 1
    </select>
    <select id="searchUserMeetingInMonth" parameterType="Map" resultType="String">
        SELECT
        DISTINCT DATE_FORMAT( m.date, '%Y/%m/%d' ) AS date
        FROM tb_meeting m
        JOIN tb_user u ON JSON_CONTAINS ( m.members, CAST( u.id AS CHAR ) )
        WHERE u.id = #{userId}
        AND u.status = 1
        AND m.status IN(3,4)
        AND DATE_FORMAT(m.date,'%Y/%c')=#{express}
    </select>
    <select id="searchCanCheckinMeeting" parameterType="HashMap" resultType="long">
        SELECT COUNT( * )
        FROM tb_meeting
        WHERE id = #{meetingId}
        AND status IN( 3,4 )
        AND NOW() BETWEEN DATE_SUB(CONCAT(date," ",`start`),INTERVAL 15 MINUTE)
        AND DATE_ADD(CONCAT(date," ",`start`),INTERVAL 5 MINUTE)
        AND JSON_CONTAINS ( IFNULL(members,JSON_ARRAY()), CAST( #{userId} AS CHAR ) )
        AND NOT JSON_CONTAINS ( IFNULL(present,JSON_ARRAY()), CAST( #{userId} AS CHAR ) )
    </select>
    <select id="searchMeetingByScan" parameterType="HashMap" resultType="HashMap">
        SELECT
        m.id,
        m.title,
        DATE_FORMAT(m.start,'%H:%i') AS `start`,
        DATE_FORMAT(m.end,'%H:%i') AS `end`,
        m.place,
        JSON_LENGTH(m.members) AS num,
        m.`desc`,
        JSON_CONTAINS ( IFNULL(m.present,JSON_ARRAY()) , CONVERT ( #{userId}, CHAR ) ) AS checkin,
        (
        SELECT CONCAT( "[", GROUP_CONCAT( JSON_OBJECT ( "name", u.name, "photo", u.photo ) SEPARATOR "," ), "]" )
        FROM tb_user u
        WHERE u.`status`=1 AND JSON_CONTAINS (IFNULL(m.present,JSON_ARRAY()), CONVERT ( u.id, CHAR ) )
        ) AS present,
        (
        SELECT CONCAT( "[", GROUP_CONCAT( JSON_OBJECT ( "name", u.name, "photo", u.photo ) SEPARATOR "," ), "]" )
        FROM tb_user u
        WHERE u.`status`=1 AND JSON_CONTAINS ( m.members, CONVERT ( u.id, CHAR ) ) AND
        NOT JSON_CONTAINS ( IFNULL(m.present,JSON_ARRAY()), CONVERT ( u.id, CHAR ) )
        ) AS unpresent
        FROM tb_meeting_room mr
        JOIN tb_meeting m ON mr.`name`=m.place
        WHERE mr.id=#{meetingRoomId} AND mr.`status`=1 AND m.`status`=3
        AND JSON_CONTAINS ( m.members, CONVERT ( #{userId}, CHAR ) )
        AND NOW() >= DATE_SUB(CONCAT(m.date," ",m.`start`), INTERVAL 15 MINUTE)
        AND NOW() &lt; DATE_SUB(CONCAT(m.date," ",m.`end`),INTERVAL 15 MINUTE)
    </select>
    <update id="updateMeetingInstanceId" parameterType="HashMap">
        UPDATE tb_meeting
        SET instance_id=#{instanceId}
        WHERE uuid=#{uuid}
    </update>
    <update id="updateMeetingInfo" parameterType="HashMap">
        UPDATE tb_meeting
        SET title = #{title},
        date = #{date},
        <if test="place!=null">
            place = #{place},
        </if>
        <if test="place==null">
            place = NULL,
        </if>
        start = #{start},
        end = #{end},
        type = #{type},
        members = #{members},
        `desc` = #{desc},
        status=#{status}
        WHERE id = #{id} AND status=3
    </update>
    <update id="updateMeetingPresent" parameterType="HashMap">
        UPDATE tb_meeting
        SET present = JSON_ARRAY_APPEND ( IFNULL( present, JSON_ARRAY ( ) ), '$', #{userId} )
        WHERE id = #{meetingId}
        AND NOW() >= DATE_SUB(CONCAT(date," ",`start`), INTERVAL 15 MINUTE)
        AND NOW() &lt; DATE_SUB(CONCAT(date," ",`end`),INTERVAL 15 MINUTE)
        AND JSON_CONTAINS ( IFNULL( members, JSON_ARRAY ( ) ), CAST( #{userId} AS CHAR ) )
        AND NOT JSON_CONTAINS ( IFNULL( present, JSON_ARRAY ( ) ), CAST( #{userId} AS CHAR ) )
    </update>
    <delete id="deleteMeetingById" parameterType="int">
        DELETE FROM tb_meeting
        WHERE id=#{id} AND status=3
    </delete>
</mapper>